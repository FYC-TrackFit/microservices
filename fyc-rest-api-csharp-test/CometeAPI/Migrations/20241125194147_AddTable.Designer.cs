// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FycRestApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241125194147_AddTable")]
    partial class AddTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FycRestApi.Business.CategorieExercice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("libelle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.ToTable("categorie_exercice", (string)null);
                });

            modelBuilder.Entity("FycRestApi.Business.Exercice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("caloriePerdus")
                        .HasColumnType("int");

                    b.Property<int>("durreRealise")
                        .HasColumnType("int");

                    b.Property<string>("libelle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("seance_id")
                        .HasColumnType("int");

                    b.Property<int>("type_exercice_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("seance_id");

                    b.HasIndex("type_exercice_id");

                    b.ToTable("exercice", (string)null);
                });

            modelBuilder.Entity("FycRestApi.Business.Seance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Sportifid")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("libelle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("sportif_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Sportifid");

                    b.HasIndex("sportif_id");

                    b.ToTable("seance", (string)null);
                });

            modelBuilder.Entity("FycRestApi.Business.Sportif", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("id");

                    b.ToTable("sportif", (string)null);
                });

            modelBuilder.Entity("FycRestApi.Business.TypeExercice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("categorie_exercice_id")
                        .HasColumnType("int");

                    b.Property<string>("libelle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("objectifCalorique")
                        .HasColumnType("int");

                    b.Property<int>("objectifDurre")
                        .HasColumnType("int");

                    b.Property<int>("repetition")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categorie_exercice_id");

                    b.ToTable("type_exercice", (string)null);
                });

            modelBuilder.Entity("FycRestApi.Business.Exercice", b =>
                {
                    b.HasOne("FycRestApi.Business.Seance", "seance")
                        .WithMany("Exercices")
                        .HasForeignKey("seance_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FycRestApi.Business.TypeExercice", "typeExercice")
                        .WithMany("Exercices")
                        .HasForeignKey("type_exercice_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("seance");

                    b.Navigation("typeExercice");
                });

            modelBuilder.Entity("FycRestApi.Business.Seance", b =>
                {
                    b.HasOne("FycRestApi.Business.Sportif", null)
                        .WithMany("seances")
                        .HasForeignKey("Sportifid");

                    b.HasOne("FycRestApi.Business.Sportif", "sportif")
                        .WithMany()
                        .HasForeignKey("sportif_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sportif");
                });

            modelBuilder.Entity("FycRestApi.Business.TypeExercice", b =>
                {
                    b.HasOne("FycRestApi.Business.CategorieExercice", "categorieExercice")
                        .WithMany()
                        .HasForeignKey("categorie_exercice_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categorieExercice");
                });

            modelBuilder.Entity("FycRestApi.Business.Seance", b =>
                {
                    b.Navigation("Exercices");
                });

            modelBuilder.Entity("FycRestApi.Business.Sportif", b =>
                {
                    b.Navigation("seances");
                });

            modelBuilder.Entity("FycRestApi.Business.TypeExercice", b =>
                {
                    b.Navigation("Exercices");
                });
#pragma warning restore 612, 618
        }
    }
}
